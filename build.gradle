plugins {
    id 'java'
    id 'java-gradle-plugin'
    id 'idea'
    id 'maven-publish'
    id 'jacoco'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'com.gradle.plugin-publish' version '1.2.1'
    id 'de.undercouch.download' version '4.1.2'
}

description = 'Gradle plugin providing tasks to generate Web3j contracts from Solidity.'
sourceCompatibility = 17

ext {
    web3jVersion = '4.12.0'
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components["java"])
            groupId = "org.web3j"
            artifactId = "web3j-gradle-plugin"
            version = "4.12.0"
        }
    }
    repositories {
        mavenLocal()
    }
}

apply {
    [
        'jacoco',
        'java',
        'javadoc',
        'repositories',
        'spotless',
        'junit'
    ].each { buildScript ->
        download {
            src "https://raw.githubusercontent.com/hyperledger/web3j-build-tools/main/gradle/$buildScript/build.gradle"
            dest "$rootDir/gradle/$buildScript/build.gradle"
            overwrite true
            quiet true
            onlyIfModified true
        }
        from("$rootDir/gradle/$buildScript/build.gradle")
    }
}

repositories {
    maven {
        url 'https://plugins.gradle.org/m2/'
    }
}

dependencies {
    implementation "org.web3j.solidity:solidity-gradle-plugin:$solidityPluginVersion"
    implementation("org.web3j:core:$web3jVersion") {
        exclude group: 'org.slf4j', module: 'slf4j-nop'
    }
    implementation("org.web3j:codegen:$web3jVersion") {
        exclude group: 'org.slf4j', module: 'slf4j-nop'
    }

    configurations.all {
        resolutionStrategy {
            force(group: "org.jetbrains.kotlin", name: "kotlin-reflect", version: kotlinVersion)
            force(group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: kotlinVersion)
            force(group: "org.jetbrains.kotlin", name: "kotlin-stdlib-common", version: kotlinVersion)
            force(group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk7", version: kotlinVersion)
            force(group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: kotlinVersion)
        }
    }
}

gradlePlugin {
    website = 'https://web3j.io/'
    vcsUrl = 'https://github.com/hyperledger/web3j-gradle-plugin'
    plugins {
        web3j {
            description = 'Gradle plugin providing tasks to generate web3j contracts from Solidity.'
            displayName = description
            tags.set([
                'solidity',
                'ethereum',
                'web3.js',
                'web3j'
            ])
            id = 'org.web3j'
            implementationClass = 'org.web3j.gradle.plugin.Web3jPlugin'
        }
    }
}

def generatedResources = "$buildDir/generated-resources/main"

sourceSets {
    main {
        output.dir(generatedResources, builtBy: 'generateVersionProperties')
    }
}

task generateVersionProperties {
    doLast {
        new File(generatedResources).mkdirs()
        def generated = new File(generatedResources, "version.properties")
        generated.text = "version=$rootProject.version"
    }
}

tasks.withType(Test) {
    reports.html.destination file("${reporting.baseDir}/${name}")
}

tasks.named('spotlessJava') {
    dependsOn downloadJavaLicense, downloadFormatterProperties
    mustRunAfter tasks.named('compileJava')
    mustRunAfter tasks.named('spotlessGroovyGradle')
    dependsOn tasks.named('javadoc')
    dependsOn tasks.named('pluginDescriptors')
    dependsOn tasks.named('processResources')
}

tasks.named('spotlessKotlin') {
    dependsOn downloadJavaLicense, downloadFormatterProperties
    mustRunAfter tasks.named('compileJava')
    mustRunAfter tasks.named('spotlessGroovyGradle')
    dependsOn tasks.named('spotlessJava')
}

tasks.named('spotlessCheck') {
    dependsOn downloadJavaLicense, downloadFormatterProperties
    dependsOn tasks.named('spotlessJava')
    dependsOn tasks.named('spotlessKotlin')
    dependsOn tasks.named('spotlessGroovyGradle')
}
